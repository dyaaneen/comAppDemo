<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Communication App - Chat</title>

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
    <link rel="stylesheet" href="/static/style.css">
</head>
<body>
    <div class="dashBoardContainer">
        <aside>
            <div class="dashBoardTop">
                <div class="dashBoardLogo">
                    <h2>Communications App</h2>
                </div>
            </div>
            <div class="dashBoardSidebar">
                <a href="/route/dashboard" style="text-decoration: none">
                    <span class="material-symbols-outlined">grid_view</span>
                    <h3>Dashboard</h3>
                </a>
                <a href="/route/sendChat" style="text-decoration: none" class="active">
                    <span class="material-symbols-outlined">chat</span>
                    <h3>Chat</h3>
                </a>
                <a href="/route/sendSMS" style="text-decoration: none">
                    <span class="material-symbols-outlined">sms</span>
                    <h3>Send SMS</h3>
                </a>
                <a href="/route/voiceCall" style="text-decoration: none">
                    <span class="material-symbols-outlined">call</span>
                    <h3>Voice Call</h3>
                </a>
                <a href="/route/sendMail" style="text-decoration: none">
                    <span class="material-symbols-outlined">mail</span>
                    <h3>Email</h3>
                </a>
            </div>
        </aside>

        <main>
            <div class="mainTop">
                <h2>Hello, <%= username %>!</h2>
            </div>
            <div class="content">
                <div class="app">
                    <div class="screen chat-screen">
                        <div class="chatHeader">
                            <h1>Chat Application</h1>
                        </div>
                    </div>
                    <div class="chat-screen">
                        <div class="messageBox">
                            <div class="message my-message">
                                <div class="messages" id="messages"></div>
                            </div>
                        </div>
                        <div class="typebox">
                            <form id="form" enctype="multipart/form-data">
                                <input id="input" autocomplete="off" placeholder="Type your message" /><button id="send">Send</button>
                                <input type="file" id="fileInput" />
                            </form>
                        </div>
                    </div>
                    
                </div>


                <script src="/socket.io/socket.io.js"></script>
                <script>
                    const socket = io();
                    const form = document.getElementById('form');
                    const input = document.getElementById('input');
                    const fileInput = document.getElementById('fileInput');
                    const messages = document.getElementById('messages');
            
                    const username = "<%= username %>"; // Get the username from the server
            
                    form.addEventListener('submit', (e) => {
                        e.preventDefault();
            
                        const textMessage = input.value.trim();
                        const file = fileInput.files[0];
            
                        if (textMessage || file) {
                            const messageData = { username };
            
                            if (textMessage) {
                                messageData.text = textMessage;
                            }
            
                            if (file) {
                                const reader = new FileReader();
                                reader.onloadend = () => {
                                    messageData.file = reader.result;
                                    socket.emit('chat message', messageData);
                                    input.value = '';
                                    fileInput.value = ''; // Clear file input
                                };
                                reader.readAsDataURL(file); // Read file as base64
                                return; // Stop further execution
                            }
            
                            socket.emit('chat message', messageData);
                            input.value = ''; // Clear text input
                        }
                    });
            
                    socket.on('chat message', (msg) => {
                        const messageDiv = document.createElement('div');
                        messageDiv.className = 'message';
            
                        if (msg.username) {
                            const usernameSpan = document.createElement('span');
                            usernameSpan.className = 'username';
                            usernameSpan.textContent = `${msg.username}: `;
                            messageDiv.appendChild(usernameSpan);
                        }
            
                        if (msg.text) {
                            messageDiv.appendChild(document.createTextNode(msg.text));
                        }
            
                        if (msg.file) {
                            if (msg.file.startsWith('data:image/')) {
                                const img = document.createElement('img');
                                img.src = msg.file;
                                messageDiv.appendChild(img);
                            } else {
                                const link = document.createElement('a');
                                link.href = msg.file;
                                link.target = '_blank';
                                link.textContent = 'View attachment';
                                messageDiv.appendChild(link);
                            }
                        }
            
                        messages.appendChild(messageDiv);
                        window.scrollTo(0, document.body.scrollHeight); // Scroll to the bottom
                    });
                </script>
            </div>

            
        </main>
    </div>
</body>
</html>
